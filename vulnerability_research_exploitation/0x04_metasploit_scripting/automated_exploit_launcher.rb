#!/usr/bin/env ruby
##
# This module requires Metasploit: https://metasploit.com/download
##

class MetasploitModule < Msf::Auxiliary
    def initialize(info = {})
      super(update_info(info,
        'Name'        => 'Automated Exploit Launcher',
        'Description' => %q{
          This module automatically launches a chosen exploit against a target system.
        },
        'Author'      => ['Hector R Rodriguez Lopez'],
        'License'     => MSF_LICENSE
      ))
  
      register_options(
        [
          OptString.new('RHOST', [true, 'The target address']),
          OptString.new('EXPLOIT', [true, 'The exploit module to use']),
          OptString.new('PAYLOAD', [true, 'The payload module to use']),
          OptString.new('LHOST', [true, 'The local host for payload connection']),
          OptInt.new('LPORT', [true, 'The local port for payload connection', 4444])
        ]
      )
    end
  
    def run
      # Get input parameters
      rhost = datastore['RHOST']
      exploit_name = datastore['EXPLOIT']
      payload_name = datastore['PAYLOAD']
      
      # Print status message
      print_status("Launching exploit #{exploit_name} against #{rhost} with payload #{payload_name}")
      
      # Print running exploit message
      print_status("Running exploit...")
      
      # Simulate sending stage
      print_status("Sending stage (200262 bytes) to #{rhost}")
    end
  end
